<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<project name="Online Bookstore" default="build" basedir=".">
	<!-- Global properties for this build -->
	<property environment="env" />
	<!-- on PC, maybe c:\tomcat-8.0 -->
	<property name="CATALINA_HOME" value="${env.CATALINA_HOME}" />
	<!-- on PC, http://localhost:8080-->
	<property name="TOMCAT_URL" value="${env.TOMCAT_URL}" />
	<property name="deploy.dir" value="${CATALINA_HOME}/webapps/${ant.project.name}" />
	
	<property name="database.dir" value="database" />
	<property name="src.dir" value="src" />
	<property name="webinf.dir" value="WebContent/WEB-INF" />
	<!-- Note new location of classes, even in client-server case-->
	<property name="classes.dir" value="${webinf.dir}/classes" />
	<!-- the main set of jars is set that is deployed with the web app -->
	<property name="lib.dir" value="${webinf.dir}/lib" />
	<!-- lib has jars needed only for clientserver case, add-ons to main set,
	     which includes all the driver jars.  Note that we do not need to *deploy* 
	     (i.e., install with the web app) the driver jars, because they
	      are not directly used in the web app case. Instead, we need to
	      make sure they are in tomcat's lib dir, so tomcat can create the needed
	      Datasource objects. The preconfigured tomcat has the needed driver jars.
	   -->
	<property name="clientserver-lib.dir" value="lib" />
	<property name="MYSQL_URL" value = "jdbc:mysql://${env.MYSQL_SITE}/flights"/>
	<property name="JAVAAGENT" value="-javaagent:${lib.dir}/eclipselink.jar" />
	
	<!-- Classpath declaration: all jars in lib -->
	<path id="project.classpath">
		<pathelement location="${classes.dir}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	
	<target name="init">
		<mkdir dir="${classes.dir}"/>
	</target>
	
	<!-- Clean up -->
	<target name="clean" description="Clean up the derived files">
		<delete dir="${classes.dir}" />
		<!-- delete junit test output -->
		<delete>
			<fileset dir="${basedir}">
				<include name="TEST-*.txt" />
			</fileset>
		</delete>
	</target>
	
	<!-- Compile Java source, requesting extra info on deprecated methods -->
	<target name="build" depends="init">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}" debug="on" destdir="${classes.dir}" 
			classpathref="project.classpath" includeantruntime="false">
			<exclude name="**/service/src/" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>
	</target>
	
	<!-- simple deployment: copy WebContent file tree to webapps area -->
	<!-- also, clean up first -->
	<target name="deploy" depends="clean, build">
		<delete dir="${deploy.dir}" />
		<copy todir="${deploy.dir}">
			<fileset dir="WebContent" />
		</copy>
	</target>
</project>